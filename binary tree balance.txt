ll ab(ll a,ll b)
{
    if(a>b)
    return a-b;
return b-a;
}
class node
{
    public:
    ll data;
    node*left;
    node*right;
    node(ll d)
    {
        data=d;
        left=NULL;
        right=NULL;
    }
};
ll height(node*root){
    if(root==NULL){
        return 0;
    }
    ll ls = height(root->left);
    ll rs = height(root->right);
    return max(ls,rs) + 1;

}
class hbpair
{
    public:
    ll height;
    bool balance;
};
hbpair istreebalance(node*root)
{
    hbpair p;
    if(root==NULL)
    {
        p.height=0;
        p.balance=true;
    }
    hbpair left=istreebalance(root->left);
    hbpair right=istreebalance(root->right);
    if(ab(left.height,right.height)<=1&& left.balance==true &&right.balance==true)
    {
        p.balance=true;
        p.height=1+max(left.height,right.height);
        return p;
    }
    else
    {
        p.balance=false;
        p.height=1+max(left.height,right.height);
    return p;
    }
}
node* buildTree(){
    ll d;
    cin>>d;

    if(d==-1){
        return NULL;
    }
    node * root = new node(d);
    root->left = buildTree();
    root->right = buildTree();
    return root;
}